/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.prog5121poepart3;

/**
 *
 * @author RC_Student_lab
 */
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;


public class TasksData extends javax.swing.JFrame {
private int taskCounter = -1; // For autogenerated Task Number


    /**
     * Creates new form TasksData
     */
    public TasksData() {
        
        initComponents();
    }
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        tskName = new javax.swing.JTextField();
        DevDtls = new javax.swing.JTextField();
        TskDurtn = new javax.swing.JTextField();
        statusComboBox = new javax.swing.JComboBox<>();
        AddBtn = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        AddData = new javax.swing.JTable();
        DeleteBtn = new javax.swing.JButton();
        FindLongestBtn = new javax.swing.JButton();
        SearchBtn = new javax.swing.JButton();
        ReportBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel1.setText("TASK NAME:");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel3.setText("DEVELOPER DETAILS:");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel4.setText("TASK DURATION:");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel5.setText("TASK STATUS:");

        statusComboBox.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        statusComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "To Do ", "Doing ", "Done" }));

        AddBtn.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        AddBtn.setText("ADD TASK");
        AddBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddBtnActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jButton2.setText("QUIT");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        AddData.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        AddData.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "taskNumber", "taskID", "Name", "Dev Details", "Duration", "Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane2.setViewportView(AddData);

        DeleteBtn.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        DeleteBtn.setText("DELETE");
        DeleteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteBtnActionPerformed(evt);
            }
        });

        FindLongestBtn.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        FindLongestBtn.setText("LONGEST");
        FindLongestBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FindLongestBtnActionPerformed(evt);
            }
        });

        SearchBtn.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        SearchBtn.setText("SEARCH ");
        SearchBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchBtnActionPerformed(evt);
            }
        });

        ReportBtn.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        ReportBtn.setText("REPORT");
        ReportBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ReportBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(AddBtn)
                        .addGap(156, 156, 156)
                        .addComponent(jButton2)
                        .addGap(80, 80, 80)
                        .addComponent(ReportBtn)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4))
                                .addGap(63, 63, 63)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(DevDtls)
                                    .addComponent(tskName, javax.swing.GroupLayout.DEFAULT_SIZE, 116, Short.MAX_VALUE)
                                    .addComponent(TskDurtn)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(statusComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(52, 52, 52)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 237, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 692, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(DeleteBtn)
                                .addGap(53, 53, 53)
                                .addComponent(FindLongestBtn)
                                .addGap(38, 38, 38)
                                .addComponent(SearchBtn)))
                        .addGap(32, 32, 32))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(54, 54, 54)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(tskName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(64, 64, 64)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(DevDtls, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(66, 66, 66)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(DeleteBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(FindLongestBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(SearchBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(57, 57, 57)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(TskDurtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel4))))
                        .addGap(31, 31, 31)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(statusComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(155, 155, 155)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(AddBtn)
                            .addComponent(jButton2)
                            .addComponent(ReportBtn)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void AddBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddBtnActionPerformed
     String taskName = tskName.getText().trim();
    String developerDetails = DevDtls.getText().trim();
    String duration = TskDurtn.getText().trim();
    
     
    
    if (taskName.isEmpty() || developerDetails.isEmpty() || duration.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Please fill in all fields", "Error", JOptionPane.ERROR_MESSAGE);
        return;
    }
    
     try {
        Integer.valueOf(duration);
    } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(this, "Duration must be a valid number", "Error", JOptionPane.ERROR_MESSAGE);
        return;
    }
     taskCounter++; // Increment Task Number
      String taskId = generateTaskId(taskName, taskCounter, developerDetails);
     
     // Get the selected status
    String status = (String) statusComboBox.getSelectedItem(); // This line retrieves the selected status
      
    
     DefaultTableModel model = (DefaultTableModel) AddData.getModel();
    model.addRow(new Object[]{taskCounter, taskId,  tskName.getText(), DevDtls.getText(), TskDurtn.getText(), status});
    
    tskName.setText("");
    DevDtls.setText("");
    TskDurtn.setText("");
    statusComboBox.setSelectedIndex(0);
    
   
}
     private String generateTaskId(String taskName, int taskNumber, String developerDetails) {
    String firstTwoLetters = taskName.length() >= 2 ? taskName.substring(0, 2).toUpperCase() : taskName.toUpperCase();
    String lastThreeLetters = developerDetails.length() >= 3 ? developerDetails.substring(developerDetails.length() - 3).toUpperCase() : developerDetails.toUpperCase();
    
    return firstTwoLetters + ":" + taskNumber + ":" + lastThreeLetters;
    
    }//GEN-LAST:event_AddBtnActionPerformed

    private void DeleteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteBtnActionPerformed
        int row = AddData.getSelectedRow();
        
        if (row < 0) {
            JOptionPane.showMessageDialog(this, "No row is selected! Please select one row",
                                                "Select row",
                                                 JOptionPane.ERROR_MESSAGE);
        } else {
            DefaultTableModel model = (DefaultTableModel) AddData.getModel();
            model.removeRow(row);
        }
    }//GEN-LAST:event_DeleteBtnActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        
    }//GEN-LAST:event_jButton2ActionPerformed

    private void FindLongestBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FindLongestBtnActionPerformed
       DefaultTableModel model = (DefaultTableModel) AddData.getModel();
       int longestDuration = -1;
       String developerDetails = "";
       String taskName = "";
       
       for (int i = 0; i < model.getRowCount(); i++) {
           int duration;
           try {
               duration = Integer.parseInt(model.getValueAt(i, 4).toString());
           } catch (NumberFormatException e) {
               continue;
           }
           if (duration > longestDuration) {
           longestDuration = duration;
           developerDetails = model.getValueAt(i, 3).toString();
           taskName = model.getValueAt(i, 1).toString();
       } 
       }
       if (longestDuration > -1) {
           String message = "Task Name: " + taskName + "\nDeveloper Details:" + developerDetails +
                            "\nDuration: " + longestDuration + "hours";
           JOptionPane.showMessageDialog(this, message, "Longest Duration Task", JOptionPane.INFORMATION_MESSAGE);
          
       } else {
           JOptionPane.showMessageDialog(this,"No tasks available.", "Info", JOptionPane.INFORMATION_MESSAGE);
       }
    }//GEN-LAST:event_FindLongestBtnActionPerformed

    private void SearchBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchBtnActionPerformed

        String searchTerm = JOptionPane.showInputDialog(this, "Enter Task Name or Task Id:", "Search Task", JOptionPane.PLAIN_MESSAGE);
        if (searchTerm == null || searchTerm.trim().isEmpty()) {
            return; // User cancelled or entered nothing
        }
        
        DefaultTableModel model = (DefaultTableModel) AddData.getModel();
        boolean found = false;
        StringBuilder result = new StringBuilder();
        
        for (int i = 0; i < model.getRowCount(); i++) {
            String taskId = model.getValueAt(i,1).toString();
            String taskName = model.getValueAt(i,2).toString();
            
            if (taskId.equalsIgnoreCase(searchTerm) || taskName.equalsIgnoreCase(searchTerm)) {
                found = true;
                result.append("Task Id:").append(taskId)
                                            .append("\nTask Name:").append(taskName)
                                            .append("\nDeveloper Details: ").append(model.getValueAt(i,3).toString())
                                            .append("\nDuration: ").append(model.getValueAt(i,4).toString())
                                            .append("\nStatus: ").append(model.getValueAt(i, 5).toString())
                                            .append("\n\n");
            }                               
        }
        
        if (found) {
            JOptionPane.showMessageDialog(this, result.toString(), "Search Results", JOptionPane.INFORMATION_MESSAGE);
        
        } else {
            JOptionPane.showMessageDialog(this, "No tasks found with the given Task Name or Task ID.", "Search Results", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_SearchBtnActionPerformed

    private void ReportBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ReportBtnActionPerformed
     DefaultTableModel model = (DefaultTableModel) AddData.getModel();
    StringBuilder report = new StringBuilder();
    
     if (model.getRowCount() == 0) {
        JOptionPane.showMessageDialog(this, "No tasks available to report.", "Report", JOptionPane.INFORMATION_MESSAGE);
        return;
    }
      report.append("Task Report\n");
    report.append("=================================\n");
    report.append(String.format("%-10s %-20s %-20s %-15s %-10s\n", "Task ID", "Task Name", "Developer Details", "Duration", "Status"));
    report.append("=================================\n");
    
    for (int i = 0; i < model.getRowCount(); i++) {
        String taskId = model.getValueAt(i, 2).toString();
        String taskName = model.getValueAt(i, 3).toString();
        String developerDetails = model.getValueAt(i, 4).toString();
        String duration = model.getValueAt(i, 5).toString();
        String status = model.getValueAt(i, 6).toString();
        
        report.append(String.format("%-10s %-20s %-20s %-15s %-10s\n", taskId, taskName, developerDetails, duration, status));
    }
    
    report.append("=================================\n");
    
    
    }//GEN-LAST:event_ReportBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TasksData.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TasksData.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TasksData.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TasksData.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TasksData().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddBtn;
    private javax.swing.JTable AddData;
    private javax.swing.JButton DeleteBtn;
    private javax.swing.JTextField DevDtls;
    private javax.swing.JButton FindLongestBtn;
    private javax.swing.JButton ReportBtn;
    private javax.swing.JButton SearchBtn;
    private javax.swing.JTextField TskDurtn;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JComboBox<String> statusComboBox;
    private javax.swing.JTextField tskName;
    // End of variables declaration//GEN-END:variables
}


